{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2021-12-22T14:19:27.326Z",
    "end": "2021-12-22T14:19:33.336Z",
    "duration": 6010,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ae11fed8-341e-495d-a174-ff32cfab874b",
      "title": "",
      "fullFile": "cypress/integration/booking.spec.js",
      "file": "cypress/integration/booking.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
          "title": "Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar o contrato do GET booking",
              "fullTitle": "Booking Validar o contrato do GET booking",
              "timedOut": null,
              "duration": 4546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_requests.default.getBooking().then(getBookingResponse => {\n  _assertions.default.validarContratoOf(getBookingResponse, _schemas.default.getBookingSchema());\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: additionalneeds = undefined  satisfies: spok.string",
                "estack": "AssertionError: Timed out retrying after 4000ms: additionalneeds = undefined  satisfies: spok.string\n    at eval (https://treinamento-api.herokuapp.com/__cypress/tests?p=cypress/integration/booking.spec.js:1670:32)\nat Array.forEach (<anonymous>)\n    at Context.eval (https://treinamento-api.herokuapp.com/__cypress/tests?p=cypress/integration/booking.spec.js:1667:21)",
                "diff": null
              },
              "uuid": "432f6e52-59fc-4378-877e-0640c27b71fa",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar reserva com sucesso (200)",
              "fullTitle": "Booking Criar reserva com sucesso (200)",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _assertions.default.showdHaveStatus(postBookingResponse, 200);\n  _assertions.default.validarBookingIdNull(postBookingResponse);\n  _assertions.default.validarHeader(postBookingResponse);\n  _assertions.default.validarAplicacao(postBookingResponse);\n  _assertions.default.validarDuracao(postBookingResponse);\n});",
              "err": {},
              "uuid": "3b96d6c6-1696-4ff8-86f6-8d8b3aae3de5",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar alterar uma reserva sem token (403)",
              "fullTitle": "Booking Tentar alterar uma reserva sem token (403)",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "5bbfae93-093f-40bd-b507-94b847c496a9",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alterar uma reverserva com sucesso (200)",
              "fullTitle": "Booking Alterar uma reverserva com sucesso (200)",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBooking(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 200);\n  });\n});",
              "err": {},
              "uuid": "4ccf188f-b30a-4c0e-b58f-3f769d6dd41c",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reverserva inexistente (405)",
              "fullTitle": "Booking tentar alterar uma reverserva inexistente (405)",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "164c9294-eacb-427f-a1bb-a03ee64e11bd",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reserva com token inválido (403)",
              "fullTitle": "Booking tentar alterar uma reserva com token inválido (403)",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "96a2bbcc-14a9-460c-b86a-9d6741307f4d",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva com sucesso (201)",
              "fullTitle": "Booking Excluir uma reserva com sucesso (201)",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBooking(postBookingResponse).then(deleteBookingResponse => {\n    _assertions.default.showdHaveStatus(deleteBookingResponse, 201);\n  });\n});",
              "err": {},
              "uuid": "2acb62ab-62d9-4312-81f4-be4c7e717880",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token (403)",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaSemToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "0d35f0a2-a499-4ca7-a31f-dfc2dc9ca1d9",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token invalido (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token invalido (403)",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "5b4af995-0a7c-4eec-b986-1fabf25f7298",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva inexistente()405",
              "fullTitle": "Booking Excluir uma reserva inexistente()405",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "bdbbaa4a-4b06-4555-9348-5611e07b0458",
              "parentUUID": "7c1c0a1b-0a60-4028-9e39-a61d098922b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b96d6c6-1696-4ff8-86f6-8d8b3aae3de5",
            "5bbfae93-093f-40bd-b507-94b847c496a9",
            "4ccf188f-b30a-4c0e-b58f-3f769d6dd41c",
            "164c9294-eacb-427f-a1bb-a03ee64e11bd",
            "96a2bbcc-14a9-460c-b86a-9d6741307f4d",
            "2acb62ab-62d9-4312-81f4-be4c7e717880",
            "0d35f0a2-a499-4ca7-a31f-dfc2dc9ca1d9",
            "5b4af995-0a7c-4eec-b986-1fabf25f7298",
            "bdbbaa4a-4b06-4555-9348-5611e07b0458"
          ],
          "failures": [
            "432f6e52-59fc-4378-877e-0640c27b71fa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5879,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}