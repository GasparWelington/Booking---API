{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2021-12-20T20:07:15.828Z",
    "end": "2021-12-20T20:07:21.642Z",
    "duration": 5814,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a8475ef-44df-4219-8f32-7afa1eb961dd",
      "title": "",
      "fullFile": "cypress/integration/booking.spec.js",
      "file": "cypress/integration/booking.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "366f0f94-c526-44fa-8f48-28e0940b9b05",
          "title": "Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar o contrato do GET booking",
              "fullTitle": "Booking Validar o contrato do GET booking",
              "timedOut": null,
              "duration": 4577,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_requests.default.getBooking().then(getBookingResponse => {\n  _assertions.default.validarContratoOf(getBookingResponse, _schemas.default.getBookingSchema());\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: additionalneeds = undefined  satisfies: spok.string",
                "estack": "AssertionError: Timed out retrying after 4000ms: additionalneeds = undefined  satisfies: spok.string\n    at eval (https://treinamento-api.herokuapp.com/__cypress/tests?p=cypress/integration/booking.spec.js:1670:32)\nat Array.forEach (<anonymous>)\n    at Context.eval (https://treinamento-api.herokuapp.com/__cypress/tests?p=cypress/integration/booking.spec.js:1667:21)",
                "diff": null
              },
              "uuid": "3f59495a-2a0d-4d43-8d69-9cb7727c7249",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar reserva com sucesso (200)",
              "fullTitle": "Booking Criar reserva com sucesso (200)",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _assertions.default.showdHaveStatus(postBookingResponse, 200);\n  _assertions.default.validarBookingIdNull(postBookingResponse);\n  _assertions.default.validarHeader(postBookingResponse);\n  _assertions.default.validarAplicacao(postBookingResponse);\n  _assertions.default.validarDuracao(postBookingResponse);\n});",
              "err": {},
              "uuid": "b39554af-976c-4a93-8202-4b096cb69eed",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar alterar uma reserva sem token (403)",
              "fullTitle": "Booking Tentar alterar uma reserva sem token (403)",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "58012ad5-e500-4918-92f1-0057b9b2cdde",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alterar uma reverserva com sucesso (200)",
              "fullTitle": "Booking Alterar uma reverserva com sucesso (200)",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBooking(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 200);\n  });\n});",
              "err": {},
              "uuid": "5212b691-9791-4dd3-a9cd-855f6989d576",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reverserva inexistente (405)",
              "fullTitle": "Booking tentar alterar uma reverserva inexistente (405)",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "3e6f0168-2ab6-4dbc-ac08-9b3ddb2e5031",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reserva com token inválido (403)",
              "fullTitle": "Booking tentar alterar uma reserva com token inválido (403)",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "9ebe1380-13da-4fdf-904b-c6578998d347",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva com sucesso (201)",
              "fullTitle": "Booking Excluir uma reserva com sucesso (201)",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBooking(postBookingResponse).then(deleteBookingResponse => {\n    _assertions.default.showdHaveStatus(deleteBookingResponse, 201);\n  });\n});",
              "err": {},
              "uuid": "d6b2ec86-5d71-4ddd-bd2a-baf75255b1fb",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token (403)",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaSemToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "4b7ed37d-f00c-487d-a0b6-7c8c513e3e35",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token invalido (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token invalido (403)",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "c1175d8f-f996-47ae-a5ee-0395bdea1719",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva inexistente()405",
              "fullTitle": "Booking Excluir uma reserva inexistente()405",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "629c2542-0ff6-4f84-9c82-f9aab7c49ecc",
              "parentUUID": "366f0f94-c526-44fa-8f48-28e0940b9b05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b39554af-976c-4a93-8202-4b096cb69eed",
            "58012ad5-e500-4918-92f1-0057b9b2cdde",
            "5212b691-9791-4dd3-a9cd-855f6989d576",
            "3e6f0168-2ab6-4dbc-ac08-9b3ddb2e5031",
            "9ebe1380-13da-4fdf-904b-c6578998d347",
            "d6b2ec86-5d71-4ddd-bd2a-baf75255b1fb",
            "4b7ed37d-f00c-487d-a0b6-7c8c513e3e35",
            "c1175d8f-f996-47ae-a5ee-0395bdea1719",
            "629c2542-0ff6-4f84-9c82-f9aab7c49ecc"
          ],
          "failures": [
            "3f59495a-2a0d-4d43-8d69-9cb7727c7249"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}