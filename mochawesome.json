{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-20T17:29:24.648Z",
    "end": "2021-12-20T17:29:25.860Z",
    "duration": 1212,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fd51441c-e477-4497-9b5e-b5fb5a3c9355",
      "title": "",
      "fullFile": "cypress/integration/booking.spec.js",
      "file": "cypress/integration/booking.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "677834b9-752b-4de2-9c41-2a0e7c50037a",
          "title": "Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar o contrato do GET booking",
              "fullTitle": "Booking Validar o contrato do GET booking",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.getBooking().then(getBookingResponse => {\n  _assertions.default.validarContratoOf(getBookingResponse, _schemas.default.getBookingSchema());\n});",
              "err": {},
              "uuid": "3b85c8ce-a392-450e-a593-3b73955be58d",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar reserva com sucesso (200)",
              "fullTitle": "Booking Criar reserva com sucesso (200)",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _assertions.default.showdHaveStatus(postBookingResponse, 200);\n  _assertions.default.validarBookingIdNull(postBookingResponse);\n  _assertions.default.validarHeader(postBookingResponse);\n  _assertions.default.validarAplicacao(postBookingResponse);\n  _assertions.default.validarDuracao(postBookingResponse);\n});",
              "err": {},
              "uuid": "bbdc192a-5155-4450-b51d-e9d77055a30e",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar alterar uma reserva sem token (403)",
              "fullTitle": "Booking Tentar alterar uma reserva sem token (403)",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "ca4ed913-88db-4ede-8fed-85866b063541",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alterar uma reverserva com sucesso (200)",
              "fullTitle": "Booking Alterar uma reverserva com sucesso (200)",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBooking(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 200);\n  });\n});",
              "err": {},
              "uuid": "3b43a9e7-d75b-454a-b0cb-238f9ce7eef0",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reverserva inexistente (405)",
              "fullTitle": "Booking tentar alterar uma reverserva inexistente (405)",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "b42c4d5a-8865-428f-b5ed-373654621bf0",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reserva com token inválido (403)",
              "fullTitle": "Booking tentar alterar uma reserva com token inválido (403)",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "48c59992-8b5f-4b0b-a56b-4262eb134e49",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva com sucesso (201)",
              "fullTitle": "Booking Excluir uma reserva com sucesso (201)",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBooking(postBookingResponse).then(deleteBookingResponse => {\n    _assertions.default.showdHaveStatus(deleteBookingResponse, 201);\n  });\n});",
              "err": {},
              "uuid": "eb1729aa-e9ca-4c3d-8167-dbaf02b250a1",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token (403)",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaSemToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "e9c54c15-15c3-4ef0-a1e3-6d9819a1725d",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token invalido (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token invalido (403)",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "4888406a-fef1-4a84-a90a-7177025ca747",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva inexistente()405",
              "fullTitle": "Booking Excluir uma reserva inexistente()405",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "bda821a6-030d-4071-8175-82c61d946529",
              "parentUUID": "677834b9-752b-4de2-9c41-2a0e7c50037a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b85c8ce-a392-450e-a593-3b73955be58d",
            "bbdc192a-5155-4450-b51d-e9d77055a30e",
            "ca4ed913-88db-4ede-8fed-85866b063541",
            "3b43a9e7-d75b-454a-b0cb-238f9ce7eef0",
            "b42c4d5a-8865-428f-b5ed-373654621bf0",
            "48c59992-8b5f-4b0b-a56b-4262eb134e49",
            "eb1729aa-e9ca-4c3d-8167-dbaf02b250a1",
            "e9c54c15-15c3-4ef0-a1e3-6d9819a1725d",
            "4888406a-fef1-4a84-a90a-7177025ca747",
            "bda821a6-030d-4071-8175-82c61d946529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}