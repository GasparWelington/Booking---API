{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-20T17:08:12.094Z",
    "end": "2021-12-20T17:08:13.369Z",
    "duration": 1275,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0f81bd3-cb50-4715-a18d-89f2c3673656",
      "title": "",
      "fullFile": "cypress/integration/booking.spec.js",
      "file": "cypress/integration/booking.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
          "title": "Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar o contrato do GET booking",
              "fullTitle": "Booking Validar o contrato do GET booking",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.getBooking().then(getBookingResponse => {\n  _assertions.default.validarContratoOf(getBookingResponse, _schemas.default.getBookingSchema());\n});",
              "err": {},
              "uuid": "65c9feaf-d2e0-46d9-9df4-661e7e95fdea",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar reserva com sucesso (200)",
              "fullTitle": "Booking Criar reserva com sucesso (200)",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _assertions.default.showdHaveStatus(postBookingResponse, 200);\n  _assertions.default.validarBookingIdNull(postBookingResponse);\n  _assertions.default.validarHeader(postBookingResponse);\n  _assertions.default.validarAplicacao(postBookingResponse);\n  _assertions.default.validarDuracao(postBookingResponse);\n});",
              "err": {},
              "uuid": "9cc972ba-99bf-4e82-9e91-d4040b5ee31b",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar alterar uma reserva sem token (403)",
              "fullTitle": "Booking Tentar alterar uma reserva sem token (403)",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "17080f3e-81b1-4931-a997-eca107ae170b",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alterar uma reverserva com sucesso (200)",
              "fullTitle": "Booking Alterar uma reverserva com sucesso (200)",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBooking(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 200);\n  });\n});",
              "err": {},
              "uuid": "3f677a39-bfb5-4237-a05d-7e5b9f94eeb2",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reverserva inexistente (405)",
              "fullTitle": "Booking tentar alterar uma reverserva inexistente (405)",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "2d707b3a-7bff-43cf-87d7-2c6ce9d0d38e",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reserva com token inválido (403)",
              "fullTitle": "Booking tentar alterar uma reserva com token inválido (403)",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "ad060edb-346a-4f8c-87d6-fc7ce13f5a5e",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva com sucesso (201)",
              "fullTitle": "Booking Excluir uma reserva com sucesso (201)",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBooking(postBookingResponse).then(deleteBookingResponse => {\n    _assertions.default.showdHaveStatus(deleteBookingResponse, 201);\n  });\n});",
              "err": {},
              "uuid": "f430ef60-9d4f-481f-ad16-65de06f7e230",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token (403)",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaSemToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "b054475b-98f2-42e2-9a94-84cd9fb245c0",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token invalido (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token invalido (403)",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "56916d5f-6ccb-4e3c-a774-a233ed18769a",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva inexistente()405",
              "fullTitle": "Booking Excluir uma reserva inexistente()405",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "66af1e33-dfe8-45a0-9381-d37c45760a90",
              "parentUUID": "5752a3a8-f134-439f-b4c8-d17d8717ff60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65c9feaf-d2e0-46d9-9df4-661e7e95fdea",
            "9cc972ba-99bf-4e82-9e91-d4040b5ee31b",
            "17080f3e-81b1-4931-a997-eca107ae170b",
            "3f677a39-bfb5-4237-a05d-7e5b9f94eeb2",
            "2d707b3a-7bff-43cf-87d7-2c6ce9d0d38e",
            "ad060edb-346a-4f8c-87d6-fc7ce13f5a5e",
            "f430ef60-9d4f-481f-ad16-65de06f7e230",
            "b054475b-98f2-42e2-9a94-84cd9fb245c0",
            "56916d5f-6ccb-4e3c-a774-a233ed18769a",
            "66af1e33-dfe8-45a0-9381-d37c45760a90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}