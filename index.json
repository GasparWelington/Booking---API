{
  "stats": {
    "suites": 2,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-20T12:05:28.030Z",
    "end": "2021-12-20T12:05:36.671Z",
    "duration": 4074,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d4e87949-8020-4d3a-b0c7-ce98fdda4c3d",
      "title": "",
      "fullFile": "cypress/integration/ping.spec.js",
      "file": "cypress/integration/ping.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a700b9aa-6823-4889-8398-5d9fcf11b328",
          "title": "Ping",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "544398b7-9a96-4519-aa02-6351aecf90dc",
              "title": "ping",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get teste de API",
                  "fullTitle": "Ping ping Get teste de API",
                  "timedOut": null,
                  "duration": 227,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_requests.default.getPing().its('status').should('eq', 201);",
                  "err": {},
                  "uuid": "3a972271-d8da-4c05-98b2-e90cdc30a1c7",
                  "parentUUID": "544398b7-9a96-4519-aa02-6351aecf90dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a972271-d8da-4c05-98b2-e90cdc30a1c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 227,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2a9b8ae1-b01a-45ea-b592-350c6c510c8a",
      "title": "",
      "fullFile": "cypress/integration/booking.spec.js",
      "file": "cypress/integration/booking.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
          "title": "Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar o contrato do GET booking",
              "fullTitle": "Booking Validar o contrato do GET booking",
              "timedOut": null,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.getBooking().then(getBookingResponse => {\n  _assertions.default.validarContratoOf(getBookingResponse, _schemas.default.getBookingSchema());\n});",
              "err": {},
              "uuid": "b8cfef4f-f0dd-40e1-8fed-f0c4983a2276",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Criar reserva com sucesso",
              "fullTitle": "Booking Criar reserva com sucesso",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _assertions.default.showdHaveStatus(postBookingResponse, 200);\n  _assertions.default.validarBookingIdNull(postBookingResponse);\n  _assertions.default.validarHeader(postBookingResponse);\n  _assertions.default.validarAplicacao(postBookingResponse);\n  _assertions.default.validarDuracao(postBookingResponse);\n});",
              "err": {},
              "uuid": "a3c6f1d7-0df7-4f45-bcf9-ae207eb6f1a1",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar alterar uma reserva sem token",
              "fullTitle": "Booking Tentar alterar uma reserva sem token",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "d9b16d83-3f3f-41f6-b8e2-521d14198159",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alterar uma reverserva com sucesso",
              "fullTitle": "Booking Alterar uma reverserva com sucesso",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBooking(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 200);\n  });\n});",
              "err": {},
              "uuid": "fa89bb34-daf9-4ab5-b066-6703ed6a338a",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reverserva inexistente",
              "fullTitle": "Booking tentar alterar uma reverserva inexistente",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "6f76c1d1-f7e4-4bd3-8ca2-46a47ef11d6d",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar alterar uma reserva com token invÃ¡lido (403)",
              "fullTitle": "Booking tentar alterar uma reserva com token invÃ¡lido (403)",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.updadeTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "ddad3a33-3d0c-4519-9918-147eb8ae7eb7",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva com sucesso",
              "fullTitle": "Booking Excluir uma reserva com sucesso",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBooking(postBookingResponse).then(deleteBookingResponse => {\n    _assertions.default.showdHaveStatus(deleteBookingResponse, 201);\n  });\n});",
              "err": {},
              "uuid": "7e3d7230-4cd6-44ad-8f6d-f4cda48cfb99",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token (403)",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaSemToken(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "7c25e27e-0c4d-48bd-a781-9b1964648c38",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tentar excluir uma reserva sem token invalido (403)",
              "fullTitle": "Booking tentar excluir uma reserva sem token invalido (403)",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteReservaTokenInvalido(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 403);\n  });\n});",
              "err": {},
              "uuid": "e271e961-1753-4d76-b932-cd802e109783",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir uma reserva inexistente",
              "fullTitle": "Booking Excluir uma reserva inexistente",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_requests.default.postBooking().then(postBookingResponse => {\n  _requests.default.deleteBookingInexistente(postBookingResponse).then(putBookingResponse => {\n    _assertions.default.showdHaveStatus(putBookingResponse, 405);\n  });\n});",
              "err": {},
              "uuid": "c65d76ac-19da-4513-a428-abd5eab4f9c1",
              "parentUUID": "871d0ad0-45f6-4188-8d63-afe9bc5a8bca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8cfef4f-f0dd-40e1-8fed-f0c4983a2276",
            "a3c6f1d7-0df7-4f45-bcf9-ae207eb6f1a1",
            "d9b16d83-3f3f-41f6-b8e2-521d14198159",
            "fa89bb34-daf9-4ab5-b066-6703ed6a338a",
            "6f76c1d1-f7e4-4bd3-8ca2-46a47ef11d6d",
            "ddad3a33-3d0c-4519-9918-147eb8ae7eb7",
            "7e3d7230-4cd6-44ad-8f6d-f4cda48cfb99",
            "7c25e27e-0c4d-48bd-a781-9b1964648c38",
            "e271e961-1753-4d76-b932-cd802e109783",
            "c65d76ac-19da-4513-a428-abd5eab4f9c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}